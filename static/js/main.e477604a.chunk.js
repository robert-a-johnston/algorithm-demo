(this["webpackJsonpalgorithm-demo"]=this["webpackJsonpalgorithm-demo"]||[]).push([[0],{45:function(e,t,i){},46:function(e,t,i){},47:function(e,t,i){},54:function(e,t,i){},55:function(e,t,i){},56:function(e,t,i){},57:function(e,t,i){},58:function(e,t,i){},59:function(e,t,i){},60:function(e,t,i){},61:function(e,t,i){},62:function(e,t,i){},63:function(e,t,i){},64:function(e,t,i){"use strict";i.r(t);var n=i(1),s=i(17),r=i.n(s),c=(i(45),i(3)),a=(i(46),i(40)),o=i(38),l=i(25),h=(i(47),i(0)),d=function(){return Object(h.jsx)("div",{className:"header",children:Object(h.jsxs)(o.a,{children:[Object(h.jsx)(o.a.Brand,{children:Object(h.jsx)("h1",{children:"Algorithm Fun"})}),Object(h.jsxs)(a.a,{children:[Object(h.jsx)(l.b,{className:"nav-link",to:"algorithm-demo/",children:"Home"}),Object(h.jsx)(l.b,{className:"nav-link",to:"algorithm-demo/sort",children:"Sorter"}),Object(h.jsx)(l.b,{className:"nav-link",to:"algorithm-demo/path",children:Object(h.jsx)("span",{className:"span-link",onClick:function(e){e.stopPropagation()},children:"PathFinder"})})]})]})})},u=i(16),j=i(6);function f(e){var t=Object(u.a)(e),i=t.length,n=[];return b(t,Array(i),0,i-1,n),n}function b(e,t,i,n,s){if(!(n<=i)){var r=i+Math.floor((n-i)/2);b(e,t,i,r,s),b(e,t,r+1,n,s),function(e,t,i,n,s,r){for(var c=i;c<=s;c++)t[c]=e[c];for(var a=i,o=n+1,l=i;l<=s;l++)a>n?(r.push([[o],!1]),r.push([[l,t[o]],!0]),e[l]=t[o++]):o>s?(r.push([[a],!1]),r.push([[l,t[a]],!0]),e[l]=t[a++]):t[o]<t[a]?(r.push([[a,o],!1]),r.push([[l,t[o]],!0]),e[l]=t[o++]):(r.push([[a,o],!1]),r.push([[l,t[a]],!0]),e[l]=t[a++])}(e,t,i,r,n,s)}}function O(e){var t=Object(u.a)(e),i=[];return m(t,0,t.length-1,i),i}function m(e,t,i,n){if(!(i<=t)){var s=function(e,t,i,n){var s=t,r=i+1,c=e[t];for(;;){for(;e[++s]<=c&&s!==i;)n.push([[s],!1]);for(;e[--r]>=c&&r!==t;)n.push([[r],!1]);if(r<=s)break;n.push([[s,e[r]],!0]),n.push([[r,e[s]],!0]),p(e,s,r)}return n.push([[t,e[r]],!0]),n.push([[r,e[t]],!0]),p(e,t,r),r}(e,t,i,n);m(e,t,s,n),m(e,s+1,i,n)}}function p(e,t,i){var n=e[t];e[t]=e[i],e[i]=n}function v(e){var t=[];return function(e,t){var i,n,s=e.length,r=!1;for(i=0;i<s;i++){for(r=!1,n=0;n<s;n++)e[n]>e[n+1]&&(t.push([[n,e[n+1]],!0]),t.push([[n+1,e[n]],!0]),x(e,n,n+1),r=!0),t.push([[n],!1]);if(!r)break}}(Object(u.a)(e),t),t}function x(e,t,i){var n=e[t];e[t]=e[i],e[i]=n}function g(e,t){!function(e,t){for(var i=e.current.children,n=0;n<t.length;n++)i[n].style.backgroundColor=""}(e,t);for(var i=[],n=5,s=0;s<50;s++)i.push(n),n++;return function(e){for(var t=e.length-1;t>0;t--){var i=Math.floor(Math.random()*(t+1)),n=e[t];e[t]=e[i],e[i]=n}}(i),i}i(54);var N=i.p+"static/media/quickSortAlgo.59d510c4.JPG";function y(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"QuickSort Algorithm"}),Object(h.jsxs)("div",{className:"container",children:[Object(h.jsx)("div",{className:"algo-pic",children:Object(h.jsx)("img",{className:"quicksort-img",src:N,alt:"Quick Sort Algorithm"})}),Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsxs)("ul",{children:[Object(h.jsx)("li",{children:"Average Time: O(n log(n))"}),Object(h.jsx)("li",{children:"Worst Time: O(n^2)"}),Object(h.jsx)("li",{children:"Space: O(log(n))"})]}),Object(h.jsx)("h4",{children:"Steps for QuickSort"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Select pivot.  Can select any element(first/last/middle)"}),Object(h.jsx)("li",{children:"Start left pointer at first element and right pointer at last element."}),Object(h.jsx)("li",{children:"Compare left pointer element with pivot element."}),Object(h.jsx)("li",{children:"While left pointer element is less than pivot shift left pointer right one element."}),Object(h.jsx)("li",{children:"While right pointer element is greater than pivot shift right pointer left one element."}),Object(h.jsx)("li",{children:"Check if left pointer element is greater than right pointer element."}),Object(h.jsx)("li",{children:"If left element is less than right pointer element swap left and right pointer values."}),Object(h.jsx)("li",{children:"Add one to left pointer and subtract one from right pointer"}),Object(h.jsx)("li",{children:"If the index of the left pointer is less than the index of the right pointer repeat the process. If not return the index of the left pointer."})]})]})]})]})}i(55);var S=i.p+"static/media/mergeSortAlgo.b0ceeec9.JPG";function w(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"MergeSort Algorithm"}),Object(h.jsxs)("div",{className:"container",children:[Object(h.jsx)("div",{className:"algo-pic",children:Object(h.jsx)("img",{className:"merge-sort-img",src:S,alt:"Merge Sort Algorithm"})}),Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsxs)("ul",{children:[Object(h.jsx)("li",{children:"Average Time: O(n log(n))"}),Object(h.jsx)("li",{children:"Worst Time: O(n log(n))"}),Object(h.jsx)("li",{children:"Space: O(n)"})]}),Object(h.jsx)("h4",{children:"Steps for MergeSort"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Split given array in half."}),Object(h.jsx)("li",{children:"Recursively divide sub-arrays in half until you are left with an array with a single value."}),Object(h.jsx)("li",{children:"Merge single value sub-arrays so that they are sorted."}),Object(h.jsx)("li",{children:"Repeat merging sub-arrays and sorting until all values are in sorted array."})]})]})]})]})}i(56);var I=i.p+"static/media/bubbleSortAlgo.8146cbc2.JPG";function C(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"BubbleSort Algorithm"}),Object(h.jsxs)("div",{className:"container",children:[Object(h.jsx)("div",{className:"algo-pic",children:Object(h.jsx)("img",{className:"bubble-sort-img",src:I,alt:"Bubble Sort Algorithm"})}),Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsxs)("ul",{children:[Object(h.jsx)("li",{children:"Average Time: O(n^2)"}),Object(h.jsx)("li",{children:"Worst Time: O(n^2)"}),Object(h.jsx)("li",{children:"Space: O(1)"})]}),Object(h.jsx)("h4",{children:"Steps for BubbleSort"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Start at first item in unsorted array."}),Object(h.jsx)("li",{children:"Check if the next item is less than first item."}),Object(h.jsx)("li",{children:"If the next item is less than the first swap items."}),Object(h.jsx)("li",{children:"Continue checking if next value is greater or less than and switching when value is less than."}),Object(h.jsx)("li",{children:"Continue iterating through all of the items in the array until sorted."})]})]})]})]})}i(57);var k=15,_="green";function T(){var e=Object(n.useState)([]),t=Object(j.a)(e,2),i=t[0],s=t[1],r=Object(n.useState)(""),c=Object(j.a)(r,2),a=c[0],o=c[1],l=Object(n.useRef)(null),d=Object(n.useState)(!1),b=Object(j.a)(d,2),m=b[0],p=b[1],x=Object(n.useState)(!1),N=Object(j.a)(x,2),S=N[0],I=N[1];function T(e){e.forEach((function(e,t){var i=Object(j.a)(e,2),n=i[0],r=i[1];setTimeout((function(){if(r)s((function(e){var t=Object(j.a)(n,2),i=t[0],s=t[1],r=Object(u.a)(e);return r[i]=s,r}));else if(2===n.length){var e=Object(j.a)(n,2),t=e[0],i=e[1];E(t),E(i)}else{E(Object(j.a)(n,1)[0])}}),t*k)})),setTimeout((function(){!function(){var e=l.current.children;console.log(e);for(var t=function(t){var i=e[t].style;setTimeout((function(){return i.backgroundColor=_}),t*k)},i=0;i<e.length-1;i++)t(i);setTimeout((function(){I(!1)}),e.length*k)}()}),e.length*k)}function E(e){var t=l.current.children[e].style;setTimeout((function(){t.backgroundColor="red"}),k),setTimeout((function(){t.backgroundColor=""}),30)}return Object(n.useEffect)((function(){return s(g(l,i))}),[]),Object(h.jsxs)("div",{className:"display-container",children:[Object(h.jsxs)("div",{className:"button-container",children:[Object(h.jsx)("button",{className:"button",id:"create-array",onClick:function(){return o(""),p(!1),s(g(l,i)),void I(!1)},disabled:S,children:"Create/Reset Array"}),Object(h.jsx)("button",{className:"button",id:"merge-sort",onClick:function(){p(!0),I(!0),o(w),T(f(i))},disabled:m,children:"MergeSort"}),Object(h.jsx)("button",{className:"button",id:"quick-sort",onClick:function(){p(!0),I(!0),o(y),T(O(i))},disabled:m,children:"QuickSort"}),Object(h.jsx)("button",{className:"button",id:"bubble-sort",onClick:function(){p(!0),I(!0),o(C),T(v(i))},disabled:m,children:"BubbleSort"})]}),Object(h.jsxs)("div",{className:"array-bar-container",ref:l,children:[i.map((function(e,t){return Object(h.jsx)("div",{className:"array-bar",style:{height:"".concat(e,"Vmin"),width:"".concat(2,"vw"),color:"white"},children:e-5+1},t)})),Object(h.jsx)("div",{className:"array-bar-topper",style:{height:"55vmin",width:"".concat(2,"vw")}})]}),Object(h.jsx)("code",{className:"info",children:a})]})}var E=i(2),R=i(9),D=i(20),F=i(21),A=i(29),W=i(28),M=i(27),B=(i(58),function(e){Object(W.a)(i,e);var t=Object(M.a)(i);function i(){return Object(D.a)(this,i),t.apply(this,arguments)}return Object(F.a)(i,[{key:"render",value:function(){var e=this.props,t=e.col,i=e.isFinish,n=e.isStart,s=e.isWall,r=e.onMouseDown,c=e.onMouseEnter,a=e.onMouseUp,o=e.row,l=i?"node-finish":n?"node-start":s?"node-wall":"";return Object(h.jsx)("td",{id:"node-".concat(o,"-").concat(t),className:"node ".concat(l),onMouseDown:function(){return r(o,t)},onMouseEnter:function(){return c(o,t)},onMouseUp:function(){return a()}})}}]),i}(n.Component));function P(e,t,i){var n=[];t.distance=0;for(var s=function(e){var t,i=[],n=Object(R.a)(e);try{for(n.s();!(t=n.n()).done;){var s,r=t.value,c=Object(R.a)(r);try{for(c.s();!(s=c.n()).done;){var a=s.value;i.push(a)}}catch(o){c.e(o)}finally{c.f()}}}catch(o){n.e(o)}finally{n.f()}return i}(e);s.length;){V(s);var r=s.shift();if(!r.isWall){if(r.distance===1/0)return n;if(r.isVisited=!0,n.push(r),r===i)return n;q(r,e)}}}function V(e){e.sort((function(e,t){return e.distance-t.distance}))}function q(e,t){var i,n=function(e,t){var i=[],n=e.col,s=e.row;s>0&&i.push(t[s-1][n]);s<t.length-1&&i.push(t[s+1][n]);n>0&&i.push(t[s][n-1]);n<t[0].length-1&&i.push(t[s][n+1]);return i.filter((function(e){return!e.isVisited}))}(e,t),s=Object(R.a)(n);try{for(s.s();!(i=s.n()).done;){var r=i.value;r.distance=e.distance+1,r.previousNode=e}}catch(c){s.e(c)}finally{s.f()}}function L(e,t,i){var n=[];t.distance=0;for(var s=function(e){var t,i=[],n=Object(R.a)(e);try{for(n.s();!(t=n.n()).done;){var s,r=t.value,c=Object(R.a)(r);try{for(c.s();!(s=c.n()).done;){var a=s.value;i.push(a)}}catch(o){c.e(o)}finally{c.f()}}}catch(o){n.e(o)}finally{n.f()}return i}(e);s.length;){H(s);var r=s.shift();if(!r.isWall){if(r.distance===1/0)return n;if(r.isVisited=!0,n.push(r),r===i)return n;U(r,e)}}}function H(e){e.sort((function(e,t){return e.distance-t.distance}))}function U(e,t){var i,n=function(e,t){var i=[],n=e.col,s=e.row;s>0&&i.push(t[s-1][n]);s<t.length-1&&i.push(t[s+1][n]);n>0&&i.push(t[s][n-1]);n<t[0].length-1&&i.push(t[s][n+1]);return i.filter((function(e){return!e.isVisited}))}(e,t),s=Object(R.a)(n);try{for(s.s();!(i=s.n()).done;){var r=i.value;r.distance=e.distance+1+r.distanceToFinishNode,r.previousNode=e}}catch(c){s.e(c)}finally{s.f()}}i(59);function G(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"Dijkstra's Algorithm"}),Object(h.jsx)("div",{className:"container",children:Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsx)("p",{children:"* Depends on Implementation(V = vertices E = edges)"}),Object(h.jsxs)("ul",{children:[Object(h.jsx)("li",{children:"Average Time: O(|E| log|V|))"}),Object(h.jsx)("li",{children:"Worst Time: O(|V|^2)"}),Object(h.jsx)("li",{children:"Worst Space: O(|V| + |E|)"})]}),Object(h.jsx)("h4",{children:"Steps for Dijkstra's Algorithm"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Set all vertices distances = infinity except for the source vertex, set the source distance = 0."}),Object(h.jsx)("li",{children:"Push the source vertex in a min-priority queue in the form (distance , vertex), as the comparison in the min-priority queue will be according to vertices distances."}),Object(h.jsx)("li",{children:"Pop the vertex with the minimum distance from the priority queue (at first the popped vertex = source)."}),Object(h.jsx)("li",{children:'Update the distances of the connected vertices to the popped vertex in case of "current vertex distance + edge weight less than next vertex distance", then push the vertex with the new distance to the priority queue.'}),Object(h.jsx)("li",{children:"If the popped vertex is visited before, just continue without using it."}),Object(h.jsx)("li",{children:"Apply the same algorithm again until the priority queue is empty."})]})]})})]})}i(60);function z(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"A * Algorithm"}),Object(h.jsx)("div",{className:"container",children:Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsx)("p",{children:"* Depends on Implementation"}),Object(h.jsx)("h4",{children:"Steps for A * Algorithm"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Set all vertices distances = infinity except for the source vertex, set the source distance = 0."}),Object(h.jsx)("li",{children:"Push the source vertex in a min-priority queue in the form (distance , vertex), as the comparison in the min-priority queue will be according to vertices distances."}),Object(h.jsx)("li",{children:"Pop the vertex with the minimum distance from the priority queue (at first the popped vertex = source)."}),Object(h.jsx)("li",{children:'Update the distances of the connected vertices to the popped vertex in case of "current vertex distance + edge weight less than next vertex distance", then push the vertex with the new distance to the priority queue.'}),Object(h.jsx)("li",{children:"If the popped vertex is visited before, just continue without using it."}),Object(h.jsx)("li",{children:"Apply the same algorithm again until the priority queue is empty."})]})]})})]})}i(61);function J(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"Breath First Search Algorithm"}),Object(h.jsx)("div",{className:"container",children:Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsx)("p",{children:"* Depends on Implementation"}),Object(h.jsx)("h4",{children:"Steps for Dijkstra's Algorithm"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Set all vertices distances = infinity except for the source vertex, set the source distance = 0."}),Object(h.jsx)("li",{children:"Push the source vertex in a min-priority queue in the form (distance , vertex), as the comparison in the min-priority queue will be according to vertices distances."}),Object(h.jsx)("li",{children:"Pop the vertex with the minimum distance from the priority queue (at first the popped vertex = source)."}),Object(h.jsx)("li",{children:'Update the distances of the connected vertices to the popped vertex in case of "current vertex distance + edge weight less than next vertex distance", then push the vertex with the new distance to the priority queue.'}),Object(h.jsx)("li",{children:"If the popped vertex is visited before, just continue without using it."}),Object(h.jsx)("li",{children:"Apply the same algorithm again until the priority queue is empty."})]})]})})]})}i(62);function Q(){return Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"Depth First Search Algorithm"}),Object(h.jsx)("div",{className:"container",children:Object(h.jsxs)("div",{className:"algo-info",children:[Object(h.jsx)("h3",{children:"Time/Space Complexity"}),Object(h.jsx)("p",{children:"* Depends on Implementation"}),Object(h.jsx)("h4",{children:"Steps for Dijkstra's Algorithm"}),Object(h.jsxs)("ol",{children:[Object(h.jsx)("li",{children:"Set all vertices distances = infinity except for the source vertex, set the source distance = 0."}),Object(h.jsx)("li",{children:"Push the source vertex in a min-priority queue in the form (distance , vertex), as the comparison in the min-priority queue will be according to vertices distances."}),Object(h.jsx)("li",{children:"Pop the vertex with the minimum distance from the priority queue (at first the popped vertex = source)."}),Object(h.jsx)("li",{children:'Update the distances of the connected vertices to the popped vertex in case of "current vertex distance + edge weight less than next vertex distance", then push the vertex with the new distance to the priority queue.'}),Object(h.jsx)("li",{children:"If the popped vertex is visited before, just continue without using it."}),Object(h.jsx)("li",{children:"Apply the same algorithm again until the priority queue is empty."})]})]})})]})}i(63);var Y=function(e){Object(W.a)(i,e);var t=Object(M.a)(i);function i(){var e;return Object(D.a)(this,i),(e=t.call(this)).getInitialGrid=function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e.state.ROW_COUNT,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.state.COLUMN_COUNT,n=[],s=0;s<t;s++){for(var r=[],c=0;c<i;c++)r.push(e.createNode(s,c));n.push(r)}return n},e.createNode=function(t,i){return{row:t,col:i,isStart:t===e.state.START_NODE_ROW&&i===e.state.START_NODE_COL,isFinish:t===e.state.FINISH_NODE_ROW&&i===e.state.FINISH_NODE_COL,distance:1/0,distanceToFinishNode:Math.abs(e.state.FINISH_NODE_ROW-t)+Math.abs(e.state.FINISH_NODE_COL-i),isVisited:!1,isWall:!1,previousNode:null,isNode:!0}},e.state={grid:[],START_NODE_ROW:1,FINISH_NODE_ROW:12,START_NODE_COL:2,FINISH_NODE_COL:12,mouseIsPressed:!1,ROW_COUNT:15,COLUMN_COUNT:15,isRunning:!1,isStartNode:!1,isFinishNode:!1,isWallNode:!1,currRow:0,currCol:0,info:""},e.handleMouseDown=e.handleMouseDown.bind(Object(A.a)(e)),e.handleMouseLeave=e.handleMouseLeave.bind(Object(A.a)(e)),e.toggleIsRunning=e.toggleIsRunning.bind(Object(A.a)(e)),e}return Object(F.a)(i,[{key:"componentDidMount",value:function(){var e=this.getInitialGrid();this.setState({grid:e})}},{key:"toggleIsRunning",value:function(){this.setState({isRunning:!this.state.isRunning})}},{key:"handleMouseDown",value:function(e,t){if(!this.state.isRunning)if(this.isGridClear())if("node node-start"===document.getElementById("node-".concat(e,"-").concat(t)).className)this.setState({mouseIsPressed:!0,isStartNode:!0,currRow:e,currCol:t});else if("node node-finish"===document.getElementById("node-".concat(e,"-").concat(t)).className)this.setState({mouseIsPressed:!0,isFinishNode:!0,currRow:e,currCol:t});else{var i=K(this.state.grid,e,t);this.setState({grid:i,mouseIsPressed:!0,isWallNode:!0,currRow:e,currCol:t})}else this.clearGrid()}},{key:"isGridClear",value:function(){var e,t=Object(R.a)(this.state.grid);try{for(t.s();!(e=t.n()).done;){var i,n=e.value,s=Object(R.a)(n);try{for(s.s();!(i=s.n()).done;){var r=i.value,c=document.getElementById("node-".concat(r.row,"-").concat(r.col)).className;if("node node-visited"===c||"node node-shortest-path"===c)return!1}}catch(a){s.e(a)}finally{s.f()}}}catch(a){t.e(a)}finally{t.f()}return!0}},{key:"handleMouseEnter",value:function(e,t){if(!this.state.isRunning&&this.state.mouseIsPressed){var i=document.getElementById("node-".concat(e,"-").concat(t)).className;if(this.state.isStartNode){if("node node-wall"!==i)this.state.grid[this.state.currRow][this.state.currCol].isStart=!1,document.getElementById("node-".concat(this.state.currRow,"-").concat(this.state.currCol)).className="node",this.setState({currRow:e,currCol:t}),this.state.grid[e][t].isStart=!0,document.getElementById("node-".concat(e,"-").concat(t)).className="node node-start";this.setState({START_NODE_ROW:e,START_NODE_COL:t})}else if(this.state.isFinishNode){if("node node-wall"!==i)this.state.grid[this.state.currRow][this.state.currCol].isFinish=!1,document.getElementById("node-".concat(this.state.currRow,"-").concat(this.state.currCol)).className="node",this.setState({currRow:e,currCol:t}),this.state.grid[e][t].isFinish=!0,document.getElementById("node-".concat(e,"-").concat(t)).className="node node-finish";this.setState({FINISH_NODE_ROW:e,FINISH_NODE_COL:t})}else if(this.state.isWallNode){var n=K(this.state.grid,e,t);this.setState({grid:n})}}}},{key:"handleMouseUp",value:function(e,t){if(!this.state.isRunning){if(this.setState({mouseIsPressed:!1}),this.state.isStartNode){var i=!this.state.isStartNode;this.setState({isStartNode:i,START_NODE_ROW:e,START_NODE_COL:t})}else if(this.state.isFinishNode){var n=!this.state.isFinishNode;this.setState({isFinishNode:n,FINISH_NODE_ROW:e,FINISH_NODE_COL:t})}this.getInitialGrid()}}},{key:"handleMouseLeave",value:function(){if(this.state.isStartNode){var e=!this.state.isStartNode;this.setState({isStartNode:e,mouseIsPressed:!1})}else if(this.state.isFinishNode){var t=!this.state.isFinishNode;this.setState({isFinishNode:t,mouseIsPressed:!1})}else if(this.state.isWallNode){var i=!this.state.isWallNode;this.setState({isWallNode:i,mouseIsPressed:!1}),this.getInitialGrid()}}},{key:"clearGrid",value:function(){if(!this.state.isRunning){this.setState({info:""});var e,t=this.state.grid.slice(),i=Object(R.a)(t);try{for(i.s();!(e=i.n()).done;){var n,s=e.value,r=Object(R.a)(s);try{for(r.s();!(n=r.n()).done;){var c=n.value,a=document.getElementById("node-".concat(c.row,"-").concat(c.col)).className;"node node-start"!==a&&"node node-finish"!==a&&"node node-wall"!==a&&(document.getElementById("node-".concat(c.row,"-").concat(c.col)).className="node",c.isVisited=!1,c.distance=1/0,c.distanceToFinishNode=Math.abs(this.state.FINISH_NODE_ROW-c.row)+Math.abs(this.state.FINISH_NODE_COL-c.col)),"node node-finish"===a&&(c.isVisited=!1,c.distance=1/0,c.distanceToFinishNode=0),"node node-start"===a&&(c.isVisited=!1,c.distance=1/0,c.distanceToFinishNode=Math.abs(this.state.FINISH_NODE_ROW-c.row)+Math.abs(this.state.FINISH_NODE_COL-c.col),c.isStart=!0,c.isWall=!1,c.previousNode=null,c.isNode=!0)}}catch(o){r.e(o)}finally{r.f()}}}catch(o){i.e(o)}finally{i.f()}}}},{key:"clearWalls",value:function(){if(!this.state.isRunning){var e,t=this.state.grid.slice(),i=Object(R.a)(t);try{for(i.s();!(e=i.n()).done;){var n,s=e.value,r=Object(R.a)(s);try{for(r.s();!(n=r.n()).done;){var c=n.value;"node node-wall"===document.getElementById("node-".concat(c.row,"-").concat(c.col)).className&&(document.getElementById("node-".concat(c.row,"-").concat(c.col)).className="node",c.isWall=!1)}}catch(a){r.e(a)}finally{r.f()}}}catch(a){i.e(a)}finally{i.f()}}}},{key:"visualize",value:function(e){if(!this.state.isRunning){this.clearGrid(),this.toggleIsRunning();var t,i=this.state.grid,n=i[this.state.START_NODE_ROW][this.state.START_NODE_COL],s=i[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL];switch(e){case"Dijkstra":this.setState({info:Object(h.jsx)(G,{})}),t=P(i,n,s);break;case"AStar":this.setState({info:Object(h.jsx)(z,{})}),t=L(i,n,s);break;case"BFS":this.setState({info:Object(h.jsx)(J,{})}),t=function(e,t,i){for(var n=[],s=[t];s.length;){var r=s.shift();if(r===i)return n;if(!r.isWall&&(r.isStart||!r.isVisited)){r.isVisited=!0,n.push(r);var c=r.col,a=r.row,o=void 0;a>0&&((o=e[a-1][c]).isVisited||(o.previousNode=r,s.push(o))),a<e.length-1&&((o=e[a+1][c]).isVisited||(o.previousNode=r,s.push(o))),c>0&&((o=e[a][c-1]).isVisited||(o.previousNode=r,s.push(o))),c<e[0].length-1&&((o=e[a][c+1]).isVisited||(o.previousNode=r,s.push(o)))}}}(i,n,s);break;case"DFS":this.setState({info:Object(h.jsx)(Q,{})}),t=function(e,t,i){var n=[],s=[];for(s.push(t);s.length;){var r=s.pop();if(r===i)return n;if(!r.isWall&&(r.isStart||!r.isVisited)){r.isVisited=!0,n.push(r);var c=r.col,a=r.row,o=void 0;a>0&&((o=e[a-1][c]).isVisited||(o.previousNode=r,s.push(o))),a<e.length-1&&((o=e[a+1][c]).isVisited||(o.previousNode=r,s.push(o))),c>0&&((o=e[a][c-1]).isVisited||(o.previousNode=r,s.push(o))),c<e[0].length-1&&((o=e[a][c+1]).isVisited||(o.previousNode=r,s.push(o)))}}}(i,n,s)}var r=function(e){var t=[],i=e;for(;null!==i;)t.unshift(i),i=i.previousNode;return t}(s);r.push("end"),this.animate(t,r)}}},{key:"animate",value:function(e,t){for(var i=this,n=function(n){if(n===e.length)return setTimeout((function(){i.animateShortestPath(t)}),10*n),{v:void 0};setTimeout((function(){var t=e[n],i=document.getElementById("node-".concat(t.row,"-").concat(t.col)).className;"node node-start"!==i&&"node node-finish"!==i&&(document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-visited")}),10*n)},s=0;s<=e.length;s++){var r=n(s);if("object"===typeof r)return r.v}}},{key:"animateShortestPath",value:function(e){for(var t=this,i=function(i){"end"===e[i]?setTimeout((function(){t.toggleIsRunning()}),50*i):setTimeout((function(){var t=e[i],n=document.getElementById("node-".concat(t.row,"-").concat(t.col)).className;"node node-start"!==n&&"node node-finish"!==n&&(document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-shortest-path")}),40*i)},n=0;n<e.length;n++)i(n)}},{key:"render",value:function(){var e=this,t=this.state,i=t.grid,n=t.mouseIsPressed;return Object(h.jsxs)("div",{className:"main-container",children:[Object(h.jsx)("div",{className:"left-side",children:Object(h.jsx)("div",{className:"info-box",children:this.state.info})}),Object(h.jsxs)("div",{className:"button-container-graph",children:[Object(h.jsx)("button",{type:"button",className:"btn btn-danger",onClick:function(){return e.clearGrid()},children:"Clear Grid"}),Object(h.jsx)("button",{type:"button",className:"btn btn-warning",onClick:function(){return e.clearWalls()},children:"Clear Walls"}),Object(h.jsx)("button",{type:"button",className:"btn btn-primary",onClick:function(){return e.visualize("Dijkstra")},children:"Dijkstra's"}),Object(h.jsx)("button",{type:"button",className:"btn btn-primary",onClick:function(){return e.visualize("AStar")},children:"A*"}),Object(h.jsx)("button",{type:"button",className:"btn btn-primary",onClick:function(){return e.visualize("BFS")},children:"Breath First Search"}),Object(h.jsx)("button",{type:"button",className:"btn btn-primary",onClick:function(){return e.visualize("DFS")},children:"Depth First Search"}),Object(h.jsx)("table",{className:"grid-container",onMouseLeave:function(){return e.handleMouseLeave()},children:Object(h.jsx)("tbody",{className:"grid",children:i.map((function(t,i){return Object(h.jsx)("tr",{children:t.map((function(t,i){var s=t.row,r=t.col,c=t.isFinish,a=t.isStart,o=t.isWall;return Object(h.jsx)(B,{col:r,isFinish:c,isStart:a,isWall:o,mouseIsPressed:n,onMouseDown:function(t,i){return e.handleMouseDown(t,i)},onMouseEnter:function(t,i){return e.handleMouseEnter(t,i)},onMouseUp:function(){return e.handleMouseUp(s,r)},row:s},i)}))},i)}))})}),Object(h.jsxs)("div",{className:"instructions-container",children:[Object(h.jsx)("h4",{children:"Instructions"}),Object(h.jsxs)("ul",{className:"instructions-list",children:[Object(h.jsx)("li",{children:"You  can move the start an end nodes by clicking and dragging the nodes within the grid."}),Object(h.jsx)("li",{children:"You can create walls by clicking empty squares on the grid.  They will turn black."})]})]})]})]})}}]),i}(n.Component),K=function(e,t,i){var n=e.slice(),s=n[t][i];if(!s.isStart&&!s.isFinish&&s.isNode){var r=Object(E.a)(Object(E.a)({},s),{},{isWall:!s.isWall});n[t][i]=r}return n};var X=function(){return Object(h.jsx)("div",{className:"App",children:Object(h.jsxs)(n.Fragment,{children:[Object(h.jsx)(d,{}),Object(h.jsx)("main",{children:Object(h.jsxs)(c.c,{children:[Object(h.jsx)(c.a,{path:"algorithm-demo/sort",element:Object(h.jsx)(T,{})}),Object(h.jsx)(c.a,{path:"algorithm-demo/path",element:Object(h.jsx)(Y,{})})]})})]})})};r.a.render(Object(h.jsx)(l.a,{children:Object(h.jsx)(X,{})}),document.getElementById("root"))}},[[64,1,2]]]);
//# sourceMappingURL=main.e477604a.chunk.js.map